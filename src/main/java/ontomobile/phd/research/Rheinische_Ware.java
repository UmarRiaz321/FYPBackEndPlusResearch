package ontomobile.phd.research;

import java.util.Collection;

import org.protege.owl.codegeneration.WrappedIndividual;

import org.semanticweb.owlapi.model.OWLNamedIndividual;
import org.semanticweb.owlapi.model.OWLOntology;

/**
 * 
 * <p>
 * Generated by Protege (http://protege.stanford.edu). <br>
 * Source Class: Rheinische_Ware <br>
 * @version generated on Tue Nov 26 14:33:01 GMT+00:00 2019 by umarriaz
 */

public interface Rheinische_Ware extends Drexel_III {

    /* ***************************************************
     * Property http://www.semanticweb.org/daan/ontologies/2016/3/BDRTontology#has_Date_Range
     */
     
    /**
     * Gets all property values for the has_Date_Range property.<p>
     * 
     * @returns a collection of values for the has_Date_Range property.
     */
    Collection<? extends Date_Range> getHas_Date_Range();

    /**
     * Checks if the class has a has_Date_Range property value.<p>
     * 
     * @return true if there is a has_Date_Range property value.
     */
    boolean hasHas_Date_Range();

    /**
     * Adds a has_Date_Range property value.<p>
     * 
     * @param newHas_Date_Range the has_Date_Range property value to be added
     */
    void addHas_Date_Range(Date_Range newHas_Date_Range);

    /**
     * Removes a has_Date_Range property value.<p>
     * 
     * @param oldHas_Date_Range the has_Date_Range property value to be removed.
     */
    void removeHas_Date_Range(Date_Range oldHas_Date_Range);


    /* ***************************************************
     * Property http://www.semanticweb.org/daan/ontologies/2016/3/BDRTontology#has_Latin_Descriptive_Label
     */
     
    /**
     * Gets all property values for the has_Latin_Descriptive_Label property.<p>
     * 
     * @returns a collection of values for the has_Latin_Descriptive_Label property.
     */
    Collection<? extends Latin_Descriptive_Label> getHas_Latin_Descriptive_Label();

    /**
     * Checks if the class has a has_Latin_Descriptive_Label property value.<p>
     * 
     * @return true if there is a has_Latin_Descriptive_Label property value.
     */
    boolean hasHas_Latin_Descriptive_Label();

    /**
     * Adds a has_Latin_Descriptive_Label property value.<p>
     * 
     * @param newHas_Latin_Descriptive_Label the has_Latin_Descriptive_Label property value to be added
     */
    void addHas_Latin_Descriptive_Label(Latin_Descriptive_Label newHas_Latin_Descriptive_Label);

    /**
     * Removes a has_Latin_Descriptive_Label property value.<p>
     * 
     * @param oldHas_Latin_Descriptive_Label the has_Latin_Descriptive_Label property value to be removed.
     */
    void removeHas_Latin_Descriptive_Label(Latin_Descriptive_Label oldHas_Latin_Descriptive_Label);


    /* ***************************************************
     * Property http://www.semanticweb.org/daan/ontologies/2016/3/BDRTontology#has_Stratigraphic_Relation_with
     */
     
    /**
     * Gets all property values for the has_Stratigraphic_Relation_with property.<p>
     * 
     * @returns a collection of values for the has_Stratigraphic_Relation_with property.
     */
    Collection<? extends WrappedIndividual> getHas_Stratigraphic_Relation_with();

    /**
     * Checks if the class has a has_Stratigraphic_Relation_with property value.<p>
     * 
     * @return true if there is a has_Stratigraphic_Relation_with property value.
     */
    boolean hasHas_Stratigraphic_Relation_with();

    /**
     * Adds a has_Stratigraphic_Relation_with property value.<p>
     * 
     * @param newHas_Stratigraphic_Relation_with the has_Stratigraphic_Relation_with property value to be added
     */
    void addHas_Stratigraphic_Relation_with(WrappedIndividual newHas_Stratigraphic_Relation_with);

    /**
     * Removes a has_Stratigraphic_Relation_with property value.<p>
     * 
     * @param oldHas_Stratigraphic_Relation_with the has_Stratigraphic_Relation_with property value to be removed.
     */
    void removeHas_Stratigraphic_Relation_with(WrappedIndividual oldHas_Stratigraphic_Relation_with);


    /* ***************************************************
     * Property http://www.semanticweb.org/daan/ontologies/2016/3/BDRTontology#is_overlain_by
     */
     
    /**
     * Gets all property values for the is_overlain_by property.<p>
     * 
     * @returns a collection of values for the is_overlain_by property.
     */
    Collection<? extends WrappedIndividual> getIs_overlain_by();

    /**
     * Checks if the class has a is_overlain_by property value.<p>
     * 
     * @return true if there is a is_overlain_by property value.
     */
    boolean hasIs_overlain_by();

    /**
     * Adds a is_overlain_by property value.<p>
     * 
     * @param newIs_overlain_by the is_overlain_by property value to be added
     */
    void addIs_overlain_by(WrappedIndividual newIs_overlain_by);

    /**
     * Removes a is_overlain_by property value.<p>
     * 
     * @param oldIs_overlain_by the is_overlain_by property value to be removed.
     */
    void removeIs_overlain_by(WrappedIndividual oldIs_overlain_by);


    /* ***************************************************
     * Property http://www.semanticweb.org/daan/ontologies/2016/3/BDRTontology#is_part_of
     */
     
    /**
     * Gets all property values for the is_part_of property.<p>
     * 
     * @returns a collection of values for the is_part_of property.
     */
    Collection<? extends WrappedIndividual> getIs_part_of();

    /**
     * Checks if the class has a is_part_of property value.<p>
     * 
     * @return true if there is a is_part_of property value.
     */
    boolean hasIs_part_of();

    /**
     * Adds a is_part_of property value.<p>
     * 
     * @param newIs_part_of the is_part_of property value to be added
     */
    void addIs_part_of(WrappedIndividual newIs_part_of);

    /**
     * Removes a is_part_of property value.<p>
     * 
     * @param oldIs_part_of the is_part_of property value to be removed.
     */
    void removeIs_part_of(WrappedIndividual oldIs_part_of);


    /* ***************************************************
     * Property http://www.semanticweb.org/daan/ontologies/2016/3/BDRTontology#is_part_of_spatial
     */
     
    /**
     * Gets all property values for the is_part_of_spatial property.<p>
     * 
     * @returns a collection of values for the is_part_of_spatial property.
     */
    Collection<? extends WrappedIndividual> getIs_part_of_spatial();

    /**
     * Checks if the class has a is_part_of_spatial property value.<p>
     * 
     * @return true if there is a is_part_of_spatial property value.
     */
    boolean hasIs_part_of_spatial();

    /**
     * Adds a is_part_of_spatial property value.<p>
     * 
     * @param newIs_part_of_spatial the is_part_of_spatial property value to be added
     */
    void addIs_part_of_spatial(WrappedIndividual newIs_part_of_spatial);

    /**
     * Removes a is_part_of_spatial property value.<p>
     * 
     * @param oldIs_part_of_spatial the is_part_of_spatial property value to be removed.
     */
    void removeIs_part_of_spatial(WrappedIndividual oldIs_part_of_spatial);


    /* ***************************************************
     * Property http://www.semanticweb.org/daan/ontologies/2016/3/BDRTontology#is_part_of_temporal
     */
     
    /**
     * Gets all property values for the is_part_of_temporal property.<p>
     * 
     * @returns a collection of values for the is_part_of_temporal property.
     */
    Collection<? extends WrappedIndividual> getIs_part_of_temporal();

    /**
     * Checks if the class has a is_part_of_temporal property value.<p>
     * 
     * @return true if there is a is_part_of_temporal property value.
     */
    boolean hasIs_part_of_temporal();

    /**
     * Adds a is_part_of_temporal property value.<p>
     * 
     * @param newIs_part_of_temporal the is_part_of_temporal property value to be added
     */
    void addIs_part_of_temporal(WrappedIndividual newIs_part_of_temporal);

    /**
     * Removes a is_part_of_temporal property value.<p>
     * 
     * @param oldIs_part_of_temporal the is_part_of_temporal property value to be removed.
     */
    void removeIs_part_of_temporal(WrappedIndividual oldIs_part_of_temporal);


    /* ***************************************************
     * Property http://www.semanticweb.org/daan/ontologies/2016/3/BDRTontology#is_subset_of
     */
     
    /**
     * Gets all property values for the is_subset_of property.<p>
     * 
     * @returns a collection of values for the is_subset_of property.
     */
    Collection<? extends WrappedIndividual> getIs_subset_of();

    /**
     * Checks if the class has a is_subset_of property value.<p>
     * 
     * @return true if there is a is_subset_of property value.
     */
    boolean hasIs_subset_of();

    /**
     * Adds a is_subset_of property value.<p>
     * 
     * @param newIs_subset_of the is_subset_of property value to be added
     */
    void addIs_subset_of(WrappedIndividual newIs_subset_of);

    /**
     * Removes a is_subset_of property value.<p>
     * 
     * @param oldIs_subset_of the is_subset_of property value to be removed.
     */
    void removeIs_subset_of(WrappedIndividual oldIs_subset_of);


    /* ***************************************************
     * Property http://www.semanticweb.org/daan/ontologies/2016/3/BDRTontology#is_superset_of
     */
     
    /**
     * Gets all property values for the is_superset_of property.<p>
     * 
     * @returns a collection of values for the is_superset_of property.
     */
    Collection<? extends WrappedIndividual> getIs_superset_of();

    /**
     * Checks if the class has a is_superset_of property value.<p>
     * 
     * @return true if there is a is_superset_of property value.
     */
    boolean hasIs_superset_of();

    /**
     * Adds a is_superset_of property value.<p>
     * 
     * @param newIs_superset_of the is_superset_of property value to be added
     */
    void addIs_superset_of(WrappedIndividual newIs_superset_of);

    /**
     * Removes a is_superset_of property value.<p>
     * 
     * @param oldIs_superset_of the is_superset_of property value to be removed.
     */
    void removeIs_superset_of(WrappedIndividual oldIs_superset_of);


    /* ***************************************************
     * Property http://www.semanticweb.org/daan/ontologies/2016/3/BDRTontology#overlays
     */
     
    /**
     * Gets all property values for the overlays property.<p>
     * 
     * @returns a collection of values for the overlays property.
     */
    Collection<? extends WrappedIndividual> getOverlays();

    /**
     * Checks if the class has a overlays property value.<p>
     * 
     * @return true if there is a overlays property value.
     */
    boolean hasOverlays();

    /**
     * Adds a overlays property value.<p>
     * 
     * @param newOverlays the overlays property value to be added
     */
    void addOverlays(WrappedIndividual newOverlays);

    /**
     * Removes a overlays property value.<p>
     * 
     * @param oldOverlays the overlays property value to be removed.
     */
    void removeOverlays(WrappedIndividual oldOverlays);


    /* ***************************************************
     * Property http://www.semanticweb.org/daan/ontologies/2016/3/BDRTontology#has_Description
     */
     
    /**
     * Gets all property values for the has_Description property.<p>
     * 
     * @returns a collection of values for the has_Description property.
     */
    Collection<? extends String> getHas_Description();

    /**
     * Checks if the class has a has_Description property value.<p>
     * 
     * @return true if there is a has_Description property value.
     */
    boolean hasHas_Description();

    /**
     * Adds a has_Description property value.<p>
     * 
     * @param newHas_Description the has_Description property value to be added
     */
    void addHas_Description(String newHas_Description);

    /**
     * Removes a has_Description property value.<p>
     * 
     * @param oldHas_Description the has_Description property value to be removed.
     */
    void removeHas_Description(String oldHas_Description);



    /* ***************************************************
     * Property http://www.semanticweb.org/daan/ontologies/2016/3/BDRTontology#has_Reference
     */
     
    /**
     * Gets all property values for the has_Reference property.<p>
     * 
     * @returns a collection of values for the has_Reference property.
     */
    Collection<? extends String> getHas_Reference();

    /**
     * Checks if the class has a has_Reference property value.<p>
     * 
     * @return true if there is a has_Reference property value.
     */
    boolean hasHas_Reference();

    /**
     * Adds a has_Reference property value.<p>
     * 
     * @param newHas_Reference the has_Reference property value to be added
     */
    void addHas_Reference(String newHas_Reference);

    /**
     * Removes a has_Reference property value.<p>
     * 
     * @param oldHas_Reference the has_Reference property value to be removed.
     */
    void removeHas_Reference(String oldHas_Reference);



    /* ***************************************************
     * Common interfaces
     */

    OWLNamedIndividual getOwlIndividual();

    OWLOntology getOwlOntology();

    void delete();

}
