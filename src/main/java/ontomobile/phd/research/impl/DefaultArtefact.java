package ontomobile.phd.research.impl;

import ontomobile.phd.research.*;

import java.util.Collection;

import org.protege.owl.codegeneration.WrappedIndividual;
import org.protege.owl.codegeneration.impl.WrappedIndividualImpl;
import org.protege.owl.codegeneration.inference.CodeGenerationInference;
import org.semanticweb.owlapi.model.IRI;


/**
 * Generated by Protege (http://protege.stanford.edu).<br>
 * Source Class: DefaultArtefact <br>
 * @version generated on Tue Nov 26 14:33:01 GMT+00:00 2019 by umarriaz
 */
public class DefaultArtefact extends WrappedIndividualImpl implements Artefact {

    public DefaultArtefact(CodeGenerationInference ontology, IRI iri) {
        super(ontology, iri);
    }





    /* ***************************************************
     * Object Property http://www.semanticweb.org/daan/ontologies/2016/3/BDRTontology#has_Artefact-relation_with
     */
     
    public Collection<? extends Artefact> getHas_Artefact_relation_with() {
        return getDelegate().getPropertyValues(getOwlIndividual(),
                                               Vocabulary.OBJECT_PROPERTY_HAS_ARTEFACT_RELATION_WITH,
                                               DefaultArtefact.class);
    }

    public boolean hasHas_Artefact_relation_with() {
	   return !getHas_Artefact_relation_with().isEmpty();
    }

    public void addHas_Artefact_relation_with(Artefact newHas_Artefact_relation_with) {
        getDelegate().addPropertyValue(getOwlIndividual(),
                                       Vocabulary.OBJECT_PROPERTY_HAS_ARTEFACT_RELATION_WITH,
                                       newHas_Artefact_relation_with);
    }

    public void removeHas_Artefact_relation_with(Artefact oldHas_Artefact_relation_with) {
        getDelegate().removePropertyValue(getOwlIndividual(),
                                          Vocabulary.OBJECT_PROPERTY_HAS_ARTEFACT_RELATION_WITH,
                                          oldHas_Artefact_relation_with);
    }


    /* ***************************************************
     * Object Property http://www.semanticweb.org/daan/ontologies/2016/3/BDRTontology#has_Date_Range
     */
     
    public Collection<? extends Date_Range> getHas_Date_Range() {
        return getDelegate().getPropertyValues(getOwlIndividual(),
                                               Vocabulary.OBJECT_PROPERTY_HAS_DATE_RANGE,
                                               DefaultDate_Range.class);
    }

    public boolean hasHas_Date_Range() {
	   return !getHas_Date_Range().isEmpty();
    }

    public void addHas_Date_Range(Date_Range newHas_Date_Range) {
        getDelegate().addPropertyValue(getOwlIndividual(),
                                       Vocabulary.OBJECT_PROPERTY_HAS_DATE_RANGE,
                                       newHas_Date_Range);
    }

    public void removeHas_Date_Range(Date_Range oldHas_Date_Range) {
        getDelegate().removePropertyValue(getOwlIndividual(),
                                          Vocabulary.OBJECT_PROPERTY_HAS_DATE_RANGE,
                                          oldHas_Date_Range);
    }


    /* ***************************************************
     * Object Property http://www.semanticweb.org/daan/ontologies/2016/3/BDRTontology#has_Form_Label
     */
     
    public Collection<? extends Form_Label> getHas_Form_Label() {
        return getDelegate().getPropertyValues(getOwlIndividual(),
                                               Vocabulary.OBJECT_PROPERTY_HAS_FORM_LABEL,
                                               DefaultForm_Label.class);
    }

    public boolean hasHas_Form_Label() {
	   return !getHas_Form_Label().isEmpty();
    }

    public void addHas_Form_Label(Form_Label newHas_Form_Label) {
        getDelegate().addPropertyValue(getOwlIndividual(),
                                       Vocabulary.OBJECT_PROPERTY_HAS_FORM_LABEL,
                                       newHas_Form_Label);
    }

    public void removeHas_Form_Label(Form_Label oldHas_Form_Label) {
        getDelegate().removePropertyValue(getOwlIndividual(),
                                          Vocabulary.OBJECT_PROPERTY_HAS_FORM_LABEL,
                                          oldHas_Form_Label);
    }


    /* ***************************************************
     * Object Property http://www.semanticweb.org/daan/ontologies/2016/3/BDRTontology#has_Form_Type
     */
     
    public Collection<? extends Form_Type> getHas_Form_Type() {
        return getDelegate().getPropertyValues(getOwlIndividual(),
                                               Vocabulary.OBJECT_PROPERTY_HAS_FORM_TYPE,
                                               DefaultForm_Type.class);
    }

    public boolean hasHas_Form_Type() {
	   return !getHas_Form_Type().isEmpty();
    }

    public void addHas_Form_Type(Form_Type newHas_Form_Type) {
        getDelegate().addPropertyValue(getOwlIndividual(),
                                       Vocabulary.OBJECT_PROPERTY_HAS_FORM_TYPE,
                                       newHas_Form_Type);
    }

    public void removeHas_Form_Type(Form_Type oldHas_Form_Type) {
        getDelegate().removePropertyValue(getOwlIndividual(),
                                          Vocabulary.OBJECT_PROPERTY_HAS_FORM_TYPE,
                                          oldHas_Form_Type);
    }


    /* ***************************************************
     * Object Property http://www.semanticweb.org/daan/ontologies/2016/3/BDRTontology#has_Function
     */
     
    public Collection<? extends Function> getHas_Function() {
        return getDelegate().getPropertyValues(getOwlIndividual(),
                                               Vocabulary.OBJECT_PROPERTY_HAS_FUNCTION,
                                               DefaultFunction.class);
    }

    public boolean hasHas_Function() {
	   return !getHas_Function().isEmpty();
    }

    public void addHas_Function(Function newHas_Function) {
        getDelegate().addPropertyValue(getOwlIndividual(),
                                       Vocabulary.OBJECT_PROPERTY_HAS_FUNCTION,
                                       newHas_Function);
    }

    public void removeHas_Function(Function oldHas_Function) {
        getDelegate().removePropertyValue(getOwlIndividual(),
                                          Vocabulary.OBJECT_PROPERTY_HAS_FUNCTION,
                                          oldHas_Function);
    }


    /* ***************************************************
     * Object Property http://www.semanticweb.org/daan/ontologies/2016/3/BDRTontology#has_Inscription_OR_Stamp
     */
     
    public Collection<? extends Inscription_OR_Stamp> getHas_Inscription_OR_Stamp() {
        return getDelegate().getPropertyValues(getOwlIndividual(),
                                               Vocabulary.OBJECT_PROPERTY_HAS_INSCRIPTION_OR_STAMP,
                                               DefaultInscription_OR_Stamp.class);
    }

    public boolean hasHas_Inscription_OR_Stamp() {
	   return !getHas_Inscription_OR_Stamp().isEmpty();
    }

    public void addHas_Inscription_OR_Stamp(Inscription_OR_Stamp newHas_Inscription_OR_Stamp) {
        getDelegate().addPropertyValue(getOwlIndividual(),
                                       Vocabulary.OBJECT_PROPERTY_HAS_INSCRIPTION_OR_STAMP,
                                       newHas_Inscription_OR_Stamp);
    }

    public void removeHas_Inscription_OR_Stamp(Inscription_OR_Stamp oldHas_Inscription_OR_Stamp) {
        getDelegate().removePropertyValue(getOwlIndividual(),
                                          Vocabulary.OBJECT_PROPERTY_HAS_INSCRIPTION_OR_STAMP,
                                          oldHas_Inscription_OR_Stamp);
    }


    /* ***************************************************
     * Object Property http://www.semanticweb.org/daan/ontologies/2016/3/BDRTontology#has_Latin_Descriptive_Label
     */
     
    public Collection<? extends Latin_Descriptive_Label> getHas_Latin_Descriptive_Label() {
        return getDelegate().getPropertyValues(getOwlIndividual(),
                                               Vocabulary.OBJECT_PROPERTY_HAS_LATIN_DESCRIPTIVE_LABEL,
                                               DefaultLatin_Descriptive_Label.class);
    }

    public boolean hasHas_Latin_Descriptive_Label() {
	   return !getHas_Latin_Descriptive_Label().isEmpty();
    }

    public void addHas_Latin_Descriptive_Label(Latin_Descriptive_Label newHas_Latin_Descriptive_Label) {
        getDelegate().addPropertyValue(getOwlIndividual(),
                                       Vocabulary.OBJECT_PROPERTY_HAS_LATIN_DESCRIPTIVE_LABEL,
                                       newHas_Latin_Descriptive_Label);
    }

    public void removeHas_Latin_Descriptive_Label(Latin_Descriptive_Label oldHas_Latin_Descriptive_Label) {
        getDelegate().removePropertyValue(getOwlIndividual(),
                                          Vocabulary.OBJECT_PROPERTY_HAS_LATIN_DESCRIPTIVE_LABEL,
                                          oldHas_Latin_Descriptive_Label);
    }


    /* ***************************************************
     * Object Property http://www.semanticweb.org/daan/ontologies/2016/3/BDRTontology#has_Stratigraphic_Relation_with
     */
     
    public Collection<? extends WrappedIndividual> getHas_Stratigraphic_Relation_with() {
        return getDelegate().getPropertyValues(getOwlIndividual(),
                                               Vocabulary.OBJECT_PROPERTY_HAS_STRATIGRAPHIC_RELATION_WITH,
                                               WrappedIndividualImpl.class);
    }

    public boolean hasHas_Stratigraphic_Relation_with() {
	   return !getHas_Stratigraphic_Relation_with().isEmpty();
    }

    public void addHas_Stratigraphic_Relation_with(WrappedIndividual newHas_Stratigraphic_Relation_with) {
        getDelegate().addPropertyValue(getOwlIndividual(),
                                       Vocabulary.OBJECT_PROPERTY_HAS_STRATIGRAPHIC_RELATION_WITH,
                                       newHas_Stratigraphic_Relation_with);
    }

    public void removeHas_Stratigraphic_Relation_with(WrappedIndividual oldHas_Stratigraphic_Relation_with) {
        getDelegate().removePropertyValue(getOwlIndividual(),
                                          Vocabulary.OBJECT_PROPERTY_HAS_STRATIGRAPHIC_RELATION_WITH,
                                          oldHas_Stratigraphic_Relation_with);
    }


    /* ***************************************************
     * Object Property http://www.semanticweb.org/daan/ontologies/2016/3/BDRTontology#is_associated_with
     */
     
    public Collection<? extends WrappedIndividual> getIs_associated_with() {
        return getDelegate().getPropertyValues(getOwlIndividual(),
                                               Vocabulary.OBJECT_PROPERTY_IS_ASSOCIATED_WITH,
                                               WrappedIndividualImpl.class);
    }

    public boolean hasIs_associated_with() {
	   return !getIs_associated_with().isEmpty();
    }

    public void addIs_associated_with(WrappedIndividual newIs_associated_with) {
        getDelegate().addPropertyValue(getOwlIndividual(),
                                       Vocabulary.OBJECT_PROPERTY_IS_ASSOCIATED_WITH,
                                       newIs_associated_with);
    }

    public void removeIs_associated_with(WrappedIndividual oldIs_associated_with) {
        getDelegate().removePropertyValue(getOwlIndividual(),
                                          Vocabulary.OBJECT_PROPERTY_IS_ASSOCIATED_WITH,
                                          oldIs_associated_with);
    }


    /* ***************************************************
     * Object Property http://www.semanticweb.org/daan/ontologies/2016/3/BDRTontology#is_associated_with_Phase
     */
     
    public Collection<? extends WrappedIndividual> getIs_associated_with_Phase() {
        return getDelegate().getPropertyValues(getOwlIndividual(),
                                               Vocabulary.OBJECT_PROPERTY_IS_ASSOCIATED_WITH_PHASE,
                                               WrappedIndividualImpl.class);
    }

    public boolean hasIs_associated_with_Phase() {
	   return !getIs_associated_with_Phase().isEmpty();
    }

    public void addIs_associated_with_Phase(WrappedIndividual newIs_associated_with_Phase) {
        getDelegate().addPropertyValue(getOwlIndividual(),
                                       Vocabulary.OBJECT_PROPERTY_IS_ASSOCIATED_WITH_PHASE,
                                       newIs_associated_with_Phase);
    }

    public void removeIs_associated_with_Phase(WrappedIndividual oldIs_associated_with_Phase) {
        getDelegate().removePropertyValue(getOwlIndividual(),
                                          Vocabulary.OBJECT_PROPERTY_IS_ASSOCIATED_WITH_PHASE,
                                          oldIs_associated_with_Phase);
    }


    /* ***************************************************
     * Object Property http://www.semanticweb.org/daan/ontologies/2016/3/BDRTontology#is_fragmented_in
     */
     
    public Collection<? extends Fragment> getIs_fragmented_in() {
        return getDelegate().getPropertyValues(getOwlIndividual(),
                                               Vocabulary.OBJECT_PROPERTY_IS_FRAGMENTED_IN,
                                               DefaultFragment.class);
    }

    public boolean hasIs_fragmented_in() {
	   return !getIs_fragmented_in().isEmpty();
    }

    public void addIs_fragmented_in(Fragment newIs_fragmented_in) {
        getDelegate().addPropertyValue(getOwlIndividual(),
                                       Vocabulary.OBJECT_PROPERTY_IS_FRAGMENTED_IN,
                                       newIs_fragmented_in);
    }

    public void removeIs_fragmented_in(Fragment oldIs_fragmented_in) {
        getDelegate().removePropertyValue(getOwlIndividual(),
                                          Vocabulary.OBJECT_PROPERTY_IS_FRAGMENTED_IN,
                                          oldIs_fragmented_in);
    }


    /* ***************************************************
     * Object Property http://www.semanticweb.org/daan/ontologies/2016/3/BDRTontology#is_made_from
     */
     
    public Collection<? extends Material> getIs_made_from() {
        return getDelegate().getPropertyValues(getOwlIndividual(),
                                               Vocabulary.OBJECT_PROPERTY_IS_MADE_FROM,
                                               DefaultMaterial.class);
    }

    public boolean hasIs_made_from() {
	   return !getIs_made_from().isEmpty();
    }

    public void addIs_made_from(Material newIs_made_from) {
        getDelegate().addPropertyValue(getOwlIndividual(),
                                       Vocabulary.OBJECT_PROPERTY_IS_MADE_FROM,
                                       newIs_made_from);
    }

    public void removeIs_made_from(Material oldIs_made_from) {
        getDelegate().removePropertyValue(getOwlIndividual(),
                                          Vocabulary.OBJECT_PROPERTY_IS_MADE_FROM,
                                          oldIs_made_from);
    }


    /* ***************************************************
     * Object Property http://www.semanticweb.org/daan/ontologies/2016/3/BDRTontology#is_overlain_by
     */
     
    public Collection<? extends WrappedIndividual> getIs_overlain_by() {
        return getDelegate().getPropertyValues(getOwlIndividual(),
                                               Vocabulary.OBJECT_PROPERTY_IS_OVERLAIN_BY,
                                               WrappedIndividualImpl.class);
    }

    public boolean hasIs_overlain_by() {
	   return !getIs_overlain_by().isEmpty();
    }

    public void addIs_overlain_by(WrappedIndividual newIs_overlain_by) {
        getDelegate().addPropertyValue(getOwlIndividual(),
                                       Vocabulary.OBJECT_PROPERTY_IS_OVERLAIN_BY,
                                       newIs_overlain_by);
    }

    public void removeIs_overlain_by(WrappedIndividual oldIs_overlain_by) {
        getDelegate().removePropertyValue(getOwlIndividual(),
                                          Vocabulary.OBJECT_PROPERTY_IS_OVERLAIN_BY,
                                          oldIs_overlain_by);
    }


    /* ***************************************************
     * Object Property http://www.semanticweb.org/daan/ontologies/2016/3/BDRTontology#is_part_of
     */
     
    public Collection<? extends WrappedIndividual> getIs_part_of() {
        return getDelegate().getPropertyValues(getOwlIndividual(),
                                               Vocabulary.OBJECT_PROPERTY_IS_PART_OF,
                                               WrappedIndividualImpl.class);
    }

    public boolean hasIs_part_of() {
	   return !getIs_part_of().isEmpty();
    }

    public void addIs_part_of(WrappedIndividual newIs_part_of) {
        getDelegate().addPropertyValue(getOwlIndividual(),
                                       Vocabulary.OBJECT_PROPERTY_IS_PART_OF,
                                       newIs_part_of);
    }

    public void removeIs_part_of(WrappedIndividual oldIs_part_of) {
        getDelegate().removePropertyValue(getOwlIndividual(),
                                          Vocabulary.OBJECT_PROPERTY_IS_PART_OF,
                                          oldIs_part_of);
    }


    /* ***************************************************
     * Object Property http://www.semanticweb.org/daan/ontologies/2016/3/BDRTontology#is_part_of_spatial
     */
     
    public Collection<? extends WrappedIndividual> getIs_part_of_spatial() {
        return getDelegate().getPropertyValues(getOwlIndividual(),
                                               Vocabulary.OBJECT_PROPERTY_IS_PART_OF_SPATIAL,
                                               WrappedIndividualImpl.class);
    }

    public boolean hasIs_part_of_spatial() {
	   return !getIs_part_of_spatial().isEmpty();
    }

    public void addIs_part_of_spatial(WrappedIndividual newIs_part_of_spatial) {
        getDelegate().addPropertyValue(getOwlIndividual(),
                                       Vocabulary.OBJECT_PROPERTY_IS_PART_OF_SPATIAL,
                                       newIs_part_of_spatial);
    }

    public void removeIs_part_of_spatial(WrappedIndividual oldIs_part_of_spatial) {
        getDelegate().removePropertyValue(getOwlIndividual(),
                                          Vocabulary.OBJECT_PROPERTY_IS_PART_OF_SPATIAL,
                                          oldIs_part_of_spatial);
    }


    /* ***************************************************
     * Object Property http://www.semanticweb.org/daan/ontologies/2016/3/BDRTontology#is_part_of_temporal
     */
     
    public Collection<? extends WrappedIndividual> getIs_part_of_temporal() {
        return getDelegate().getPropertyValues(getOwlIndividual(),
                                               Vocabulary.OBJECT_PROPERTY_IS_PART_OF_TEMPORAL,
                                               WrappedIndividualImpl.class);
    }

    public boolean hasIs_part_of_temporal() {
	   return !getIs_part_of_temporal().isEmpty();
    }

    public void addIs_part_of_temporal(WrappedIndividual newIs_part_of_temporal) {
        getDelegate().addPropertyValue(getOwlIndividual(),
                                       Vocabulary.OBJECT_PROPERTY_IS_PART_OF_TEMPORAL,
                                       newIs_part_of_temporal);
    }

    public void removeIs_part_of_temporal(WrappedIndividual oldIs_part_of_temporal) {
        getDelegate().removePropertyValue(getOwlIndividual(),
                                          Vocabulary.OBJECT_PROPERTY_IS_PART_OF_TEMPORAL,
                                          oldIs_part_of_temporal);
    }


    /* ***************************************************
     * Object Property http://www.semanticweb.org/daan/ontologies/2016/3/BDRTontology#is_subset_of
     */
     
    public Collection<? extends WrappedIndividual> getIs_subset_of() {
        return getDelegate().getPropertyValues(getOwlIndividual(),
                                               Vocabulary.OBJECT_PROPERTY_IS_SUBSET_OF,
                                               WrappedIndividualImpl.class);
    }

    public boolean hasIs_subset_of() {
	   return !getIs_subset_of().isEmpty();
    }

    public void addIs_subset_of(WrappedIndividual newIs_subset_of) {
        getDelegate().addPropertyValue(getOwlIndividual(),
                                       Vocabulary.OBJECT_PROPERTY_IS_SUBSET_OF,
                                       newIs_subset_of);
    }

    public void removeIs_subset_of(WrappedIndividual oldIs_subset_of) {
        getDelegate().removePropertyValue(getOwlIndividual(),
                                          Vocabulary.OBJECT_PROPERTY_IS_SUBSET_OF,
                                          oldIs_subset_of);
    }


    /* ***************************************************
     * Object Property http://www.semanticweb.org/daan/ontologies/2016/3/BDRTontology#is_superset_of
     */
     
    public Collection<? extends WrappedIndividual> getIs_superset_of() {
        return getDelegate().getPropertyValues(getOwlIndividual(),
                                               Vocabulary.OBJECT_PROPERTY_IS_SUPERSET_OF,
                                               WrappedIndividualImpl.class);
    }

    public boolean hasIs_superset_of() {
	   return !getIs_superset_of().isEmpty();
    }

    public void addIs_superset_of(WrappedIndividual newIs_superset_of) {
        getDelegate().addPropertyValue(getOwlIndividual(),
                                       Vocabulary.OBJECT_PROPERTY_IS_SUPERSET_OF,
                                       newIs_superset_of);
    }

    public void removeIs_superset_of(WrappedIndividual oldIs_superset_of) {
        getDelegate().removePropertyValue(getOwlIndividual(),
                                          Vocabulary.OBJECT_PROPERTY_IS_SUPERSET_OF,
                                          oldIs_superset_of);
    }


    /* ***************************************************
     * Object Property http://www.semanticweb.org/daan/ontologies/2016/3/BDRTontology#overlays
     */
     
    public Collection<? extends WrappedIndividual> getOverlays() {
        return getDelegate().getPropertyValues(getOwlIndividual(),
                                               Vocabulary.OBJECT_PROPERTY_OVERLAYS,
                                               WrappedIndividualImpl.class);
    }

    public boolean hasOverlays() {
	   return !getOverlays().isEmpty();
    }

    public void addOverlays(WrappedIndividual newOverlays) {
        getDelegate().addPropertyValue(getOwlIndividual(),
                                       Vocabulary.OBJECT_PROPERTY_OVERLAYS,
                                       newOverlays);
    }

    public void removeOverlays(WrappedIndividual oldOverlays) {
        getDelegate().removePropertyValue(getOwlIndividual(),
                                          Vocabulary.OBJECT_PROPERTY_OVERLAYS,
                                          oldOverlays);
    }


    /* ***************************************************
     * Object Property http://www.semanticweb.org/daan/ontologies/2016/3/BDRTontology#was_found_at_Site
     */
     
    public Collection<? extends Site> getWas_found_at_Site() {
        return getDelegate().getPropertyValues(getOwlIndividual(),
                                               Vocabulary.OBJECT_PROPERTY_WAS_FOUND_AT_SITE,
                                               DefaultSite.class);
    }

    public boolean hasWas_found_at_Site() {
	   return !getWas_found_at_Site().isEmpty();
    }

    public void addWas_found_at_Site(Site newWas_found_at_Site) {
        getDelegate().addPropertyValue(getOwlIndividual(),
                                       Vocabulary.OBJECT_PROPERTY_WAS_FOUND_AT_SITE,
                                       newWas_found_at_Site);
    }

    public void removeWas_found_at_Site(Site oldWas_found_at_Site) {
        getDelegate().removePropertyValue(getOwlIndividual(),
                                          Vocabulary.OBJECT_PROPERTY_WAS_FOUND_AT_SITE,
                                          oldWas_found_at_Site);
    }


    /* ***************************************************
     * Object Property http://www.semanticweb.org/daan/ontologies/2016/3/BDRTontology#was_found_in_Archaeological_Context
     */
     
    public Collection<? extends Archaeological_Context> getWas_found_in_Archaeological_Context() {
        return getDelegate().getPropertyValues(getOwlIndividual(),
                                               Vocabulary.OBJECT_PROPERTY_WAS_FOUND_IN_ARCHAEOLOGICAL_CONTEXT,
                                               DefaultArchaeological_Context.class);
    }

    public boolean hasWas_found_in_Archaeological_Context() {
	   return !getWas_found_in_Archaeological_Context().isEmpty();
    }

    public void addWas_found_in_Archaeological_Context(Archaeological_Context newWas_found_in_Archaeological_Context) {
        getDelegate().addPropertyValue(getOwlIndividual(),
                                       Vocabulary.OBJECT_PROPERTY_WAS_FOUND_IN_ARCHAEOLOGICAL_CONTEXT,
                                       newWas_found_in_Archaeological_Context);
    }

    public void removeWas_found_in_Archaeological_Context(Archaeological_Context oldWas_found_in_Archaeological_Context) {
        getDelegate().removePropertyValue(getOwlIndividual(),
                                          Vocabulary.OBJECT_PROPERTY_WAS_FOUND_IN_ARCHAEOLOGICAL_CONTEXT,
                                          oldWas_found_in_Archaeological_Context);
    }


    /* ***************************************************
     * Object Property http://www.semanticweb.org/daan/ontologies/2016/3/BDRTontology#was_made_by
     */
     
    public Collection<? extends Maker> getWas_made_by() {
        return getDelegate().getPropertyValues(getOwlIndividual(),
                                               Vocabulary.OBJECT_PROPERTY_WAS_MADE_BY,
                                               DefaultMaker.class);
    }

    public boolean hasWas_made_by() {
	   return !getWas_made_by().isEmpty();
    }

    public void addWas_made_by(Maker newWas_made_by) {
        getDelegate().addPropertyValue(getOwlIndividual(),
                                       Vocabulary.OBJECT_PROPERTY_WAS_MADE_BY,
                                       newWas_made_by);
    }

    public void removeWas_made_by(Maker oldWas_made_by) {
        getDelegate().removePropertyValue(getOwlIndividual(),
                                          Vocabulary.OBJECT_PROPERTY_WAS_MADE_BY,
                                          oldWas_made_by);
    }


    /* ***************************************************
     * Object Property http://www.semanticweb.org/daan/ontologies/2016/3/BDRTontology#was_produced_at
     */
     
    public Collection<? extends Production_Centre> getWas_produced_at() {
        return getDelegate().getPropertyValues(getOwlIndividual(),
                                               Vocabulary.OBJECT_PROPERTY_WAS_PRODUCED_AT,
                                               DefaultProduction_Centre.class);
    }

    public boolean hasWas_produced_at() {
	   return !getWas_produced_at().isEmpty();
    }

    public void addWas_produced_at(Production_Centre newWas_produced_at) {
        getDelegate().addPropertyValue(getOwlIndividual(),
                                       Vocabulary.OBJECT_PROPERTY_WAS_PRODUCED_AT,
                                       newWas_produced_at);
    }

    public void removeWas_produced_at(Production_Centre oldWas_produced_at) {
        getDelegate().removePropertyValue(getOwlIndividual(),
                                          Vocabulary.OBJECT_PROPERTY_WAS_PRODUCED_AT,
                                          oldWas_produced_at);
    }


    /* ***************************************************
     * Data Property http://www.semanticweb.org/daan/ontologies/2016/3/BDRTontology#Current_Location
     */
     
    public Collection<? extends String> getCurrent_Location() {
		return getDelegate().getPropertyValues(getOwlIndividual(), Vocabulary.DATA_PROPERTY_CURRENT_LOCATION, String.class);
    }

    public boolean hasCurrent_Location() {
		return !getCurrent_Location().isEmpty();
    }

    public void addCurrent_Location(String newCurrent_Location) {
	    getDelegate().addPropertyValue(getOwlIndividual(), Vocabulary.DATA_PROPERTY_CURRENT_LOCATION, newCurrent_Location);
    }

    public void removeCurrent_Location(String oldCurrent_Location) {
		getDelegate().removePropertyValue(getOwlIndividual(), Vocabulary.DATA_PROPERTY_CURRENT_LOCATION, oldCurrent_Location);
    }


    /* ***************************************************
     * Data Property http://www.semanticweb.org/daan/ontologies/2016/3/BDRTontology#associated_Emperor
     */
     
    public Collection<? extends String> getAssociated_Emperor() {
		return getDelegate().getPropertyValues(getOwlIndividual(), Vocabulary.DATA_PROPERTY_ASSOCIATED_EMPEROR, String.class);
    }

    public boolean hasAssociated_Emperor() {
		return !getAssociated_Emperor().isEmpty();
    }

    public void addAssociated_Emperor(String newAssociated_Emperor) {
	    getDelegate().addPropertyValue(getOwlIndividual(), Vocabulary.DATA_PROPERTY_ASSOCIATED_EMPEROR, newAssociated_Emperor);
    }
    
    public void addrestoration_evidence(String restoration_evidence){
    	
    	getDelegate().addPropertyValue(getOwlIndividual(), Vocabulary.DATA_PROPERTY_ASSOCIATED_EMPEROR, restoration_evidence);
    }

    public void removeAssociated_Emperor(String oldAssociated_Emperor) {
		getDelegate().removePropertyValue(getOwlIndividual(), Vocabulary.DATA_PROPERTY_ASSOCIATED_EMPEROR, oldAssociated_Emperor);
    }


    /* ***************************************************
     * Data Property http://www.semanticweb.org/daan/ontologies/2016/3/BDRTontology#has_Base_Diameter
     */
     
    public Collection<? extends Float> getHas_Base_Diameter() {
		return getDelegate().getPropertyValues(getOwlIndividual(), Vocabulary.DATA_PROPERTY_HAS_BASE_DIAMETER, Float.class);
    }

    public boolean hasHas_Base_Diameter() {
		return !getHas_Base_Diameter().isEmpty();
    }

    public void addHas_Base_Diameter(Float newHas_Base_Diameter) {
	    getDelegate().addPropertyValue(getOwlIndividual(), Vocabulary.DATA_PROPERTY_HAS_BASE_DIAMETER, newHas_Base_Diameter);
    }

    public void removeHas_Base_Diameter(Float oldHas_Base_Diameter) {
		getDelegate().removePropertyValue(getOwlIndividual(), Vocabulary.DATA_PROPERTY_HAS_BASE_DIAMETER, oldHas_Base_Diameter);
    }


    /* ***************************************************
     * Data Property http://www.semanticweb.org/daan/ontologies/2016/3/BDRTontology#has_Base_Ring_Diameter
     */
     
    public Collection<? extends Float> getHas_Base_Ring_Diameter() {
		return getDelegate().getPropertyValues(getOwlIndividual(), Vocabulary.DATA_PROPERTY_HAS_BASE_RING_DIAMETER, Float.class);
    }

    public boolean hasHas_Base_Ring_Diameter() {
		return !getHas_Base_Ring_Diameter().isEmpty();
    }

    public void addHas_Base_Ring_Diameter(Float newHas_Base_Ring_Diameter) {
	    getDelegate().addPropertyValue(getOwlIndividual(), Vocabulary.DATA_PROPERTY_HAS_BASE_RING_DIAMETER, newHas_Base_Ring_Diameter);
    }

    public void removeHas_Base_Ring_Diameter(Float oldHas_Base_Ring_Diameter) {
		getDelegate().removePropertyValue(getOwlIndividual(), Vocabulary.DATA_PROPERTY_HAS_BASE_RING_DIAMETER, oldHas_Base_Ring_Diameter);
    }


    /* ***************************************************
     * Data Property http://www.semanticweb.org/daan/ontologies/2016/3/BDRTontology#has_Building_Phase_GIS_code
     */
     
    public Collection<? extends String> getHas_Building_Phase_GIS_code() {
		return getDelegate().getPropertyValues(getOwlIndividual(), Vocabulary.DATA_PROPERTY_HAS_BUILDING_PHASE_GIS_CODE, String.class);
    }

    public boolean hasHas_Building_Phase_GIS_code() {
		return !getHas_Building_Phase_GIS_code().isEmpty();
    }

    public void addHas_Building_Phase_GIS_code(String newHas_Building_Phase_GIS_code) {
	    getDelegate().addPropertyValue(getOwlIndividual(), Vocabulary.DATA_PROPERTY_HAS_BUILDING_PHASE_GIS_CODE, newHas_Building_Phase_GIS_code);
    }

    public void removeHas_Building_Phase_GIS_code(String oldHas_Building_Phase_GIS_code) {
		getDelegate().removePropertyValue(getOwlIndividual(), Vocabulary.DATA_PROPERTY_HAS_BUILDING_PHASE_GIS_CODE, oldHas_Building_Phase_GIS_code);
    }


    /* ***************************************************
     * Data Property http://www.semanticweb.org/daan/ontologies/2016/3/BDRTontology#has_Catalogue_Number
     */
     
    public Collection<? extends String> getHas_Catalogue_Number() {
		return getDelegate().getPropertyValues(getOwlIndividual(), Vocabulary.DATA_PROPERTY_HAS_CATALOGUE_NUMBER, String.class);
    }

    public boolean hasHas_Catalogue_Number() {
		return !getHas_Catalogue_Number().isEmpty();
    }

    public void addHas_Catalogue_Number(String newHas_Catalogue_Number) {
	    getDelegate().addPropertyValue(getOwlIndividual(), Vocabulary.DATA_PROPERTY_HAS_CATALOGUE_NUMBER, newHas_Catalogue_Number);
    }

    public void removeHas_Catalogue_Number(String oldHas_Catalogue_Number) {
		getDelegate().removePropertyValue(getOwlIndividual(), Vocabulary.DATA_PROPERTY_HAS_CATALOGUE_NUMBER, oldHas_Catalogue_Number);
    }


    /* ***************************************************
     * Data Property http://www.semanticweb.org/daan/ontologies/2016/3/BDRTontology#has_Decoration
     */
     
    public Collection<? extends String> getHas_Decoration() {
		return getDelegate().getPropertyValues(getOwlIndividual(), Vocabulary.DATA_PROPERTY_HAS_DECORATION, String.class);
    }

    public boolean hasHas_Decoration() {
		return !getHas_Decoration().isEmpty();
    }

    public void addHas_Decoration(String newHas_Decoration) {
	    getDelegate().addPropertyValue(getOwlIndividual(), Vocabulary.DATA_PROPERTY_HAS_DECORATION, newHas_Decoration);
    }

    public void removeHas_Decoration(String oldHas_Decoration) {
		getDelegate().removePropertyValue(getOwlIndividual(), Vocabulary.DATA_PROPERTY_HAS_DECORATION, oldHas_Decoration);
    }


    /* ***************************************************
     * Data Property http://www.semanticweb.org/daan/ontologies/2016/3/BDRTontology#has_Description
     */
     
    public Collection<? extends String> getHas_Description() {
		return getDelegate().getPropertyValues(getOwlIndividual(), Vocabulary.DATA_PROPERTY_HAS_DESCRIPTION, String.class);
    }

    public boolean hasHas_Description() {
		return !getHas_Description().isEmpty();
    }

    public void addHas_Description(String newHas_Description) {
	    getDelegate().addPropertyValue(getOwlIndividual(), Vocabulary.DATA_PROPERTY_HAS_DESCRIPTION, newHas_Description);
    }

    public void removeHas_Description(String oldHas_Description) {
		getDelegate().removePropertyValue(getOwlIndividual(), Vocabulary.DATA_PROPERTY_HAS_DESCRIPTION, oldHas_Description);
    }


    /* ***************************************************
     * Data Property http://www.semanticweb.org/daan/ontologies/2016/3/BDRTontology#has_Description_Location
     */
     
    public Collection<? extends String> getHas_Description_Location() {
		return getDelegate().getPropertyValues(getOwlIndividual(), Vocabulary.DATA_PROPERTY_HAS_DESCRIPTION_LOCATION, String.class);
    }

    public boolean hasHas_Description_Location() {
		return !getHas_Description_Location().isEmpty();
    }

    public void addHas_Description_Location(String newHas_Description_Location) {
	    getDelegate().addPropertyValue(getOwlIndividual(), Vocabulary.DATA_PROPERTY_HAS_DESCRIPTION_LOCATION, newHas_Description_Location);
    }

    public void removeHas_Description_Location(String oldHas_Description_Location) {
		getDelegate().removePropertyValue(getOwlIndividual(), Vocabulary.DATA_PROPERTY_HAS_DESCRIPTION_LOCATION, oldHas_Description_Location);
    }


    /* ***************************************************
     * Data Property http://www.semanticweb.org/daan/ontologies/2016/3/BDRTontology#has_Description_Material
     */
     
    public Collection<? extends String> getHas_Description_Material() {
		return getDelegate().getPropertyValues(getOwlIndividual(), Vocabulary.DATA_PROPERTY_HAS_DESCRIPTION_MATERIAL, String.class);
    }

    public boolean hasHas_Description_Material() {
		return !getHas_Description_Material().isEmpty();
    }

    public void addHas_Description_Material(String newHas_Description_Material) {
	    getDelegate().addPropertyValue(getOwlIndividual(), Vocabulary.DATA_PROPERTY_HAS_DESCRIPTION_MATERIAL, newHas_Description_Material);
    }

    public void removeHas_Description_Material(String oldHas_Description_Material) {
		getDelegate().removePropertyValue(getOwlIndividual(), Vocabulary.DATA_PROPERTY_HAS_DESCRIPTION_MATERIAL, oldHas_Description_Material);
    }


    /* ***************************************************
     * Data Property http://www.semanticweb.org/daan/ontologies/2016/3/BDRTontology#has_Description_preservation
     */
     
    public Collection<? extends String> getHas_Description_preservation() {
		return getDelegate().getPropertyValues(getOwlIndividual(), Vocabulary.DATA_PROPERTY_HAS_DESCRIPTION_PRESERVATION, String.class);
    }

    public boolean hasHas_Description_preservation() {
		return !getHas_Description_preservation().isEmpty();
    }

    public void addHas_Description_preservation(String newHas_Description_preservation) {
	    getDelegate().addPropertyValue(getOwlIndividual(), Vocabulary.DATA_PROPERTY_HAS_DESCRIPTION_PRESERVATION, newHas_Description_preservation);
    }

    public void removeHas_Description_preservation(String oldHas_Description_preservation) {
		getDelegate().removePropertyValue(getOwlIndividual(), Vocabulary.DATA_PROPERTY_HAS_DESCRIPTION_PRESERVATION, oldHas_Description_preservation);
    }


    /* ***************************************************
     * Data Property http://www.semanticweb.org/daan/ontologies/2016/3/BDRTontology#has_Diameter_other
     */
     
    public Collection<? extends Float> getHas_Diameter_other() {
		return getDelegate().getPropertyValues(getOwlIndividual(), Vocabulary.DATA_PROPERTY_HAS_DIAMETER_OTHER, Float.class);
    }

    public boolean hasHas_Diameter_other() {
		return !getHas_Diameter_other().isEmpty();
    }

    public void addHas_Diameter_other(Float newHas_Diameter_other) {
	    getDelegate().addPropertyValue(getOwlIndividual(), Vocabulary.DATA_PROPERTY_HAS_DIAMETER_OTHER, newHas_Diameter_other);
    }

    public void removeHas_Diameter_other(Float oldHas_Diameter_other) {
		getDelegate().removePropertyValue(getOwlIndividual(), Vocabulary.DATA_PROPERTY_HAS_DIAMETER_OTHER, oldHas_Diameter_other);
    }


    /* ***************************************************
     * Data Property http://www.semanticweb.org/daan/ontologies/2016/3/BDRTontology#has_Dimensions
     */
     
    public Collection<? extends Float> getHas_Dimensions() {
		return getDelegate().getPropertyValues(getOwlIndividual(), Vocabulary.DATA_PROPERTY_HAS_DIMENSIONS, Float.class);
    }

    public boolean hasHas_Dimensions() {
		return !getHas_Dimensions().isEmpty();
    }

    public void addHas_Dimensions(Float newHas_Dimensions) {
	    getDelegate().addPropertyValue(getOwlIndividual(), Vocabulary.DATA_PROPERTY_HAS_DIMENSIONS, newHas_Dimensions);
    }

    public void removeHas_Dimensions(Float oldHas_Dimensions) {
		getDelegate().removePropertyValue(getOwlIndividual(), Vocabulary.DATA_PROPERTY_HAS_DIMENSIONS, oldHas_Dimensions);
    }


    /* ***************************************************
     * Data Property http://www.semanticweb.org/daan/ontologies/2016/3/BDRTontology#has_GIS_code_information
     */
     
    public Collection<? extends String> getHas_GIS_code_information() {
		return getDelegate().getPropertyValues(getOwlIndividual(), Vocabulary.DATA_PROPERTY_HAS_GIS_CODE_INFORMATION, String.class);
    }

    public boolean hasHas_GIS_code_information() {
		return !getHas_GIS_code_information().isEmpty();
    }

    public void addHas_GIS_code_information(String newHas_GIS_code_information) {
	    getDelegate().addPropertyValue(getOwlIndividual(), Vocabulary.DATA_PROPERTY_HAS_GIS_CODE_INFORMATION, newHas_GIS_code_information);
    }

    public void removeHas_GIS_code_information(String oldHas_GIS_code_information) {
		getDelegate().removePropertyValue(getOwlIndividual(), Vocabulary.DATA_PROPERTY_HAS_GIS_CODE_INFORMATION, oldHas_GIS_code_information);
    }


    /* ***************************************************
     * Data Property http://www.semanticweb.org/daan/ontologies/2016/3/BDRTontology#has_Glaze
     */
     
    public Collection<? extends String> getHas_Glaze() {
		return getDelegate().getPropertyValues(getOwlIndividual(), Vocabulary.DATA_PROPERTY_HAS_GLAZE, String.class);
    }

    public boolean hasHas_Glaze() {
		return !getHas_Glaze().isEmpty();
    }

    public void addHas_Glaze(String newHas_Glaze) {
	    getDelegate().addPropertyValue(getOwlIndividual(), Vocabulary.DATA_PROPERTY_HAS_GLAZE, newHas_Glaze);
    }

    public void removeHas_Glaze(String oldHas_Glaze) {
		getDelegate().removePropertyValue(getOwlIndividual(), Vocabulary.DATA_PROPERTY_HAS_GLAZE, oldHas_Glaze);
    }


    /* ***************************************************
     * Data Property http://www.semanticweb.org/daan/ontologies/2016/3/BDRTontology#has_Height
     */
     
    public Collection<? extends Float> getHas_Height() {
		return getDelegate().getPropertyValues(getOwlIndividual(), Vocabulary.DATA_PROPERTY_HAS_HEIGHT, Float.class);
    }

    public boolean hasHas_Height() {
		return !getHas_Height().isEmpty();
    }

    public void addHas_Height(Float newHas_Height) {
	    getDelegate().addPropertyValue(getOwlIndividual(), Vocabulary.DATA_PROPERTY_HAS_HEIGHT, newHas_Height);
    }

    public void removeHas_Height(Float oldHas_Height) {
		getDelegate().removePropertyValue(getOwlIndividual(), Vocabulary.DATA_PROPERTY_HAS_HEIGHT, oldHas_Height);
    }


    /* ***************************************************
     * Data Property http://www.semanticweb.org/daan/ontologies/2016/3/BDRTontology#has_Image_URL
     */
     
    public Collection<? extends String> getHas_Image_URL() {
		return getDelegate().getPropertyValues(getOwlIndividual(), Vocabulary.DATA_PROPERTY_HAS_IMAGE_URL, String.class);
    }

    public boolean hasHas_Image_URL() {
		return !getHas_Image_URL().isEmpty();
    }

    public void addHas_Image_URL(String newHas_Image_URL) {
	    getDelegate().addPropertyValue(getOwlIndividual(), Vocabulary.DATA_PROPERTY_HAS_IMAGE_URL, newHas_Image_URL);
    }

    public void removeHas_Image_URL(String oldHas_Image_URL) {
		getDelegate().removePropertyValue(getOwlIndividual(), Vocabulary.DATA_PROPERTY_HAS_IMAGE_URL, oldHas_Image_URL);
    }


    /* ***************************************************
     * Data Property http://www.semanticweb.org/daan/ontologies/2016/3/BDRTontology#has_Length
     */
     
    public Collection<? extends Float> getHas_Length() {
		return getDelegate().getPropertyValues(getOwlIndividual(), Vocabulary.DATA_PROPERTY_HAS_LENGTH, Float.class);
    }

    public boolean hasHas_Length() {
		return !getHas_Length().isEmpty();
    }

    public void addHas_Length(Float newHas_Length) {
	    getDelegate().addPropertyValue(getOwlIndividual(), Vocabulary.DATA_PROPERTY_HAS_LENGTH, newHas_Length);
    }

    public void removeHas_Length(Float oldHas_Length) {
		getDelegate().removePropertyValue(getOwlIndividual(), Vocabulary.DATA_PROPERTY_HAS_LENGTH, oldHas_Length);
    }


    /* ***************************************************
     * Data Property http://www.semanticweb.org/daan/ontologies/2016/3/BDRTontology#has_Painted_Decoration
     */
     
    public Collection<? extends String> getHas_Painted_Decoration() {
		return getDelegate().getPropertyValues(getOwlIndividual(), Vocabulary.DATA_PROPERTY_HAS_PAINTED_DECORATION, String.class);
    }

    public boolean hasHas_Painted_Decoration() {
		return !getHas_Painted_Decoration().isEmpty();
    }

    public void addHas_Painted_Decoration(String newHas_Painted_Decoration) {
	    getDelegate().addPropertyValue(getOwlIndividual(), Vocabulary.DATA_PROPERTY_HAS_PAINTED_DECORATION, newHas_Painted_Decoration);
    }

    public void removeHas_Painted_Decoration(String oldHas_Painted_Decoration) {
		getDelegate().removePropertyValue(getOwlIndividual(), Vocabulary.DATA_PROPERTY_HAS_PAINTED_DECORATION, oldHas_Painted_Decoration);
    }


    /* ***************************************************
     * Data Property http://www.semanticweb.org/daan/ontologies/2016/3/BDRTontology#has_Provenance_Code
     */
     
    public Collection<? extends String> getHas_Provenance_Code() {
		return getDelegate().getPropertyValues(getOwlIndividual(), Vocabulary.DATA_PROPERTY_HAS_PROVENANCE_CODE, String.class);
    }

    public boolean hasHas_Provenance_Code() {
		return !getHas_Provenance_Code().isEmpty();
    }

    public void addHas_Provenance_Code(String newHas_Provenance_Code) {
	    getDelegate().addPropertyValue(getOwlIndividual(), Vocabulary.DATA_PROPERTY_HAS_PROVENANCE_CODE, newHas_Provenance_Code);
    }

    public void removeHas_Provenance_Code(String oldHas_Provenance_Code) {
		getDelegate().removePropertyValue(getOwlIndividual(), Vocabulary.DATA_PROPERTY_HAS_PROVENANCE_CODE, oldHas_Provenance_Code);
    }


    /* ***************************************************
     * Data Property http://www.semanticweb.org/daan/ontologies/2016/3/BDRTontology#has_Reference
     */
     
    public Collection<? extends String> getHas_Reference() {
		return getDelegate().getPropertyValues(getOwlIndividual(), Vocabulary.DATA_PROPERTY_HAS_REFERENCE, String.class);
    }

    public boolean hasHas_Reference() {
		return !getHas_Reference().isEmpty();
    }

    public void addHas_Reference(String newHas_Reference) {
	    getDelegate().addPropertyValue(getOwlIndividual(), Vocabulary.DATA_PROPERTY_HAS_REFERENCE, newHas_Reference);
    }

    public void removeHas_Reference(String oldHas_Reference) {
		getDelegate().removePropertyValue(getOwlIndividual(), Vocabulary.DATA_PROPERTY_HAS_REFERENCE, oldHas_Reference);
    }


    /* ***************************************************
     * Data Property http://www.semanticweb.org/daan/ontologies/2016/3/BDRTontology#has_Relief_Decoration
     */
     
    public Collection<? extends String> getHas_Relief_Decoration() {
		return getDelegate().getPropertyValues(getOwlIndividual(), Vocabulary.DATA_PROPERTY_HAS_RELIEF_DECORATION, String.class);
    }

    public boolean hasHas_Relief_Decoration() {
		return !getHas_Relief_Decoration().isEmpty();
    }

    public void addHas_Relief_Decoration(String newHas_Relief_Decoration) {
	    getDelegate().addPropertyValue(getOwlIndividual(), Vocabulary.DATA_PROPERTY_HAS_RELIEF_DECORATION, newHas_Relief_Decoration);
    }

    public void removeHas_Relief_Decoration(String oldHas_Relief_Decoration) {
		getDelegate().removePropertyValue(getOwlIndividual(), Vocabulary.DATA_PROPERTY_HAS_RELIEF_DECORATION, oldHas_Relief_Decoration);
    }


    /* ***************************************************
     * Data Property http://www.semanticweb.org/daan/ontologies/2016/3/BDRTontology#has_Rim_Diameter
     */
     
    public Collection<? extends Float> getHas_Rim_Diameter() {
		return getDelegate().getPropertyValues(getOwlIndividual(), Vocabulary.DATA_PROPERTY_HAS_RIM_DIAMETER, Float.class);
    }

    public boolean hasHas_Rim_Diameter() {
		return !getHas_Rim_Diameter().isEmpty();
    }

    public void addHas_Rim_Diameter(Float newHas_Rim_Diameter) {
	    getDelegate().addPropertyValue(getOwlIndividual(), Vocabulary.DATA_PROPERTY_HAS_RIM_DIAMETER, newHas_Rim_Diameter);
    }

    public void removeHas_Rim_Diameter(Float oldHas_Rim_Diameter) {
		getDelegate().removePropertyValue(getOwlIndividual(), Vocabulary.DATA_PROPERTY_HAS_RIM_DIAMETER, oldHas_Rim_Diameter);
    }


    /* ***************************************************
     * Data Property http://www.semanticweb.org/daan/ontologies/2016/3/BDRTontology#has_Surface_Treatment
     */
     
    public Collection<? extends String> getHas_Surface_Treatment() {
		return getDelegate().getPropertyValues(getOwlIndividual(), Vocabulary.DATA_PROPERTY_HAS_SURFACE_TREATMENT, String.class);
    }

    public boolean hasHas_Surface_Treatment() {
		return !getHas_Surface_Treatment().isEmpty();
    }

    public void addHas_Surface_Treatment(String newHas_Surface_Treatment) {
	    getDelegate().addPropertyValue(getOwlIndividual(), Vocabulary.DATA_PROPERTY_HAS_SURFACE_TREATMENT, newHas_Surface_Treatment);
    }

    public void removeHas_Surface_Treatment(String oldHas_Surface_Treatment) {
		getDelegate().removePropertyValue(getOwlIndividual(), Vocabulary.DATA_PROPERTY_HAS_SURFACE_TREATMENT, oldHas_Surface_Treatment);
    }


    /* ***************************************************
     * Data Property http://www.semanticweb.org/daan/ontologies/2016/3/BDRTontology#has_Thickness
     */
     
    public Collection<? extends Float> getHas_Thickness() {
		return getDelegate().getPropertyValues(getOwlIndividual(), Vocabulary.DATA_PROPERTY_HAS_THICKNESS, Float.class);
    }

    public boolean hasHas_Thickness() {
		return !getHas_Thickness().isEmpty();
    }

    public void addHas_Thickness(Float newHas_Thickness) {
	    getDelegate().addPropertyValue(getOwlIndividual(), Vocabulary.DATA_PROPERTY_HAS_THICKNESS, newHas_Thickness);
    }

    public void removeHas_Thickness(Float oldHas_Thickness) {
		getDelegate().removePropertyValue(getOwlIndividual(), Vocabulary.DATA_PROPERTY_HAS_THICKNESS, oldHas_Thickness);
    }


    /* ***************************************************
     * Data Property http://www.semanticweb.org/daan/ontologies/2016/3/BDRTontology#has_Use_Wear
     */
     
    public Collection<? extends String> getHas_Use_Wear() {
		return getDelegate().getPropertyValues(getOwlIndividual(), Vocabulary.DATA_PROPERTY_HAS_USE_WEAR, String.class);
    }

    public boolean hasHas_Use_Wear() {
		return !getHas_Use_Wear().isEmpty();
    }

    public void addHas_Use_Wear(String newHas_Use_Wear) {
	    getDelegate().addPropertyValue(getOwlIndividual(), Vocabulary.DATA_PROPERTY_HAS_USE_WEAR, newHas_Use_Wear);
    }

    public void removeHas_Use_Wear(String oldHas_Use_Wear) {
		getDelegate().removePropertyValue(getOwlIndividual(), Vocabulary.DATA_PROPERTY_HAS_USE_WEAR, oldHas_Use_Wear);
    }


    /* ***************************************************
     * Data Property http://www.semanticweb.org/daan/ontologies/2016/3/BDRTontology#has_breadth
     */
     
    public Collection<? extends Float> getHas_breadth() {
		return getDelegate().getPropertyValues(getOwlIndividual(), Vocabulary.DATA_PROPERTY_HAS_BREADTH, Float.class);
    }

    public boolean hasHas_breadth() {
		return !getHas_breadth().isEmpty();
    }

    public void addHas_breadth(Float newHas_breadth) {
	    getDelegate().addPropertyValue(getOwlIndividual(), Vocabulary.DATA_PROPERTY_HAS_BREADTH, newHas_breadth);
    }

    public void removeHas_breadth(Float oldHas_breadth) {
		getDelegate().removePropertyValue(getOwlIndividual(), Vocabulary.DATA_PROPERTY_HAS_BREADTH, oldHas_breadth);
    }


    /* ***************************************************
     * Data Property http://www.semanticweb.org/daan/ontologies/2016/3/BDRTontology#has_colour
     */
     
    public Collection<? extends String> getHas_colour() {
		return getDelegate().getPropertyValues(getOwlIndividual(), Vocabulary.DATA_PROPERTY_HAS_COLOUR, String.class);
    }

    public boolean hasHas_colour() {
		return !getHas_colour().isEmpty();
    }

    public void addHas_colour(String newHas_colour) {
	    getDelegate().addPropertyValue(getOwlIndividual(), Vocabulary.DATA_PROPERTY_HAS_COLOUR, newHas_colour);
    }

    public void removeHas_colour(String oldHas_colour) {
		getDelegate().removePropertyValue(getOwlIndividual(), Vocabulary.DATA_PROPERTY_HAS_COLOUR, oldHas_colour);
    }


    /* ***************************************************
     * Data Property http://www.semanticweb.org/daan/ontologies/2016/3/BDRTontology#has_identity_Label
     */
     
    public Collection<? extends String> getHas_identity_Label() {
		return getDelegate().getPropertyValues(getOwlIndividual(), Vocabulary.DATA_PROPERTY_HAS_IDENTITY_LABEL, String.class);
    }

    public boolean hasHas_identity_Label() {
		return !getHas_identity_Label().isEmpty();
    }

    public void addHas_identity_Label(String newHas_identity_Label) {
	    getDelegate().addPropertyValue(getOwlIndividual(), Vocabulary.DATA_PROPERTY_HAS_IDENTITY_LABEL, newHas_identity_Label);
    }

    public void removeHas_identity_Label(String oldHas_identity_Label) {
		getDelegate().removePropertyValue(getOwlIndividual(), Vocabulary.DATA_PROPERTY_HAS_IDENTITY_LABEL, oldHas_identity_Label);
    }


    /* ***************************************************
     * Data Property http://www.semanticweb.org/daan/ontologies/2016/3/BDRTontology#has_preserved_Height
     */
     
    public Collection<? extends Float> getHas_preserved_Height() {
		return getDelegate().getPropertyValues(getOwlIndividual(), Vocabulary.DATA_PROPERTY_HAS_PRESERVED_HEIGHT, Float.class);
    }

    public boolean hasHas_preserved_Height() {
		return !getHas_preserved_Height().isEmpty();
    }

    public void addHas_preserved_Height(Float newHas_preserved_Height) {
	    getDelegate().addPropertyValue(getOwlIndividual(), Vocabulary.DATA_PROPERTY_HAS_PRESERVED_HEIGHT, newHas_preserved_Height);
    }

    public void removeHas_preserved_Height(Float oldHas_preserved_Height) {
		getDelegate().removePropertyValue(getOwlIndividual(), Vocabulary.DATA_PROPERTY_HAS_PRESERVED_HEIGHT, oldHas_preserved_Height);
    }


    /* ***************************************************
     * Data Property http://www.semanticweb.org/daan/ontologies/2016/3/BDRTontology#has_surrounding_material
     */
     
    public Collection<? extends String> getHas_surrounding_material() {
		return getDelegate().getPropertyValues(getOwlIndividual(), Vocabulary.DATA_PROPERTY_HAS_SURROUNDING_MATERIAL, String.class);
    }

    public boolean hasHas_surrounding_material() {
		return !getHas_surrounding_material().isEmpty();
    }

    public void addHas_surrounding_material(String newHas_surrounding_material) {
	    getDelegate().addPropertyValue(getOwlIndividual(), Vocabulary.DATA_PROPERTY_HAS_SURROUNDING_MATERIAL, newHas_surrounding_material);
    }

    public void removeHas_surrounding_material(String oldHas_surrounding_material) {
		getDelegate().removePropertyValue(getOwlIndividual(), Vocabulary.DATA_PROPERTY_HAS_SURROUNDING_MATERIAL, oldHas_surrounding_material);
    }


    /* ***************************************************
     * Data Property http://www.semanticweb.org/daan/ontologies/2016/3/BDRTontology#has_weight
     */
     
    public Collection<? extends Float> getHas_weight() {
		return getDelegate().getPropertyValues(getOwlIndividual(), Vocabulary.DATA_PROPERTY_HAS_WEIGHT, Float.class);
    }

    public boolean hasHas_weight() {
		return !getHas_weight().isEmpty();
    }

    public void addHas_weight(Float newHas_weight) {
	    getDelegate().addPropertyValue(getOwlIndividual(), Vocabulary.DATA_PROPERTY_HAS_WEIGHT, newHas_weight);
    }

    public void removeHas_weight(Float oldHas_weight) {
		getDelegate().removePropertyValue(getOwlIndividual(), Vocabulary.DATA_PROPERTY_HAS_WEIGHT, oldHas_weight);
    }


}
